<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sorting Random Bytes</title><link>https://blog.brunobuss.dev/</link><description>Recent content on Sorting Random Bytes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 03 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.brunobuss.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>My Top 5 Books of 2022</title><link>https://blog.brunobuss.dev/posts/2023/01/03/my-top-5-books-of-2022/</link><pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.brunobuss.dev/posts/2023/01/03/my-top-5-books-of-2022/</guid><description>Not in a particular order (or almost):
Four Thousand Weeks by Oliver Burkeman You know what I told about the books not being in a particular order? Forget that for this one, as this is for sure my top 1, without any doubts. This one struck a deep chord with me and I cannot help but recommend it to every single person that I can :p
From the title, you might feel like really associating it with Wait But Why&amp;rsquo;s Your Life in Weeks and from tag line, Time Management for Mortals, it&amp;rsquo;s very easy to reach the conclusion that this book is about personal productivity.</description></item><item><title>Advent of Code 2022 - Day 16 to 20 Retrospective</title><link>https://blog.brunobuss.dev/posts/2022/12/23/advent-of-code-2022-day-16-to-20-retrospective/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.brunobuss.dev/posts/2022/12/23/advent-of-code-2022-day-16-to-20-retrospective/</guid><description>As a reminder, you can find:
Part one with days 01 to 05 here Part two with days 06 to 10 here Part three with days 11 to 15 here Github repo with my solutions in Go here Day 16 This is a classic type of problem to be solved with Dynamic Programming or Backtrack with memoization (which are equivalent solutions).
Basically my state (either to index the memoization map or the DP matrix) was composed of how much time left, where the agent was and the state of the valves.</description></item><item><title>Advent of Code 2022 - Day 11 to 15 Retrospective</title><link>https://blog.brunobuss.dev/posts/2022/12/16/advent-of-code-2022-day-11-to-15-retrospective/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.brunobuss.dev/posts/2022/12/16/advent-of-code-2022-day-11-to-15-retrospective/</guid><description>As a reminder, you can find:
Part one with days 01 to 05 here Part two with days 06 to 10 here Github repo with my solutions in Go here Day 11 This challenge join two things that I usually don&amp;rsquo;t like very much:
VERY annoying input to read/parse. Non-sense simulation (unlike the one in day 10 :) In order to avoid having to deal with 1 I went ahead to solve the simulation first here.</description></item><item><title>Advent of Code 2022 - Day 06 to 10 Retrospective</title><link>https://blog.brunobuss.dev/posts/2022/12/11/advent-of-code-2022-day-06-to-10-retrospective/</link><pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.brunobuss.dev/posts/2022/12/11/advent-of-code-2022-day-06-to-10-retrospective/</guid><description>As a reminder, you can find:
Part one with days 01 to 05 here Github repo with my solutions in Go here Day 06 This was a nice one as the part two extended very easily from part one if you used a proper data structure, in this case avoing a hard coded comparisson of 4 values in the first part.
Another thing that I did was to keep it a linear scan while maintaining a map with the count of the characters in the window if k characters back.</description></item><item><title>Advent of Code 2022 - Day 01 to 05 Retrospective</title><link>https://blog.brunobuss.dev/posts/2022/12/07/advent-of-code-2022-day-01-to-05-retrospective/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.brunobuss.dev/posts/2022/12/07/advent-of-code-2022-day-01-to-05-retrospective/</guid><description>This is a small retrospective and some notes that I took while doing the Advent of Code 2022.
For this year I decided to use Go. Unlike last time where I went with Rust to learn the language (and had lots of fun doing it), I have used a bit of Go during my ~6 month rotation into GKE SRE while at Google. So even if I&amp;rsquo;m not totally new to the language, I&amp;rsquo;m definitely not used to write idiomatic Go anyway and I hope to improve this by the end of this year&amp;rsquo;s AoC :)</description></item><item><title>cat /dev/urandom > hello-world.md</title><link>https://blog.brunobuss.dev/posts/2022/12/01/cat-/dev/urandom-hello-world.md/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.brunobuss.dev/posts/2022/12/01/cat-/dev/urandom-hello-world.md/</guid><description>I think every good blog starts with a hello world, so this one couldn&amp;rsquo;t be different.
This will be a place where hopefully I can organise some thoughts that I want to share with all of you (whoever you might be!) and since sometimes I feel like my brain is a stream of random stuff, I thought this name was appropriate :)
I still have a couple of things to finish, but I decided to put this live in order to blog about this year&amp;rsquo;s Advent of Code.</description></item></channel></rss>